""" –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤.
–ò–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–º–µ—â–µ–Ω–∞ —Ç—É—Ç-–∂–µ –ø–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç
—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞–ø—Ä–æ—Å–∞ –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –Ω–∞ –ª–µ—Ç—É.
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–æ–ª—å–∫–æ —Å–∏–º–≤–æ–ª–æ–≤,
–∏ –¥–µ–ª–∞–µ—Ç—Å—è –≤—ã–±–æ—Ä–∫–∞ –∑–∞–ø–∏—Å–µ–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö, —Å–æ–¥–µ—Ä–∂–∞—é—â–∏—Ö —ç—Ç–∏
—Å–∏–º–≤–æ–ª—ã. –≠—Ç–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã –ø—Ä–∏–∫—Ä–ø–ª—è—é—Ç—Å—è –∫ —Å–æ–æ–±—â–µ–Ω–∏—é –≤ –≤–∏–¥–µ
–∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫. –î–∞–ª–µ–µ user –≤—ã–±–∏—Ä–∞–µ—Ç –Ω—É–∂–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç –∏ –≤ –æ—Ç–≤–µ—Ç –ø–æ–ª—É—á–∞–µ—Ç
–ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é."""

from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup, Message
from aiogram.utils.keyboard import InlineKeyboardBuilder
from DB.sqlite import Db


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä —É—Ä–æ–≤–Ω—è –º–æ–¥—É–ª—è
router: Router = Router()

# –•—ç–Ω–¥–ª–µ—Ä —Ä–µ–∞–ª–∏–∑—É–µ—Ç –ø–æ–∏—Å–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤, —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ –ª—é–±—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –∏—â–µ—Ç –≤ –∫–æ–Ω—Ç–∞–∫—Ç–∞—Ö.
@router.message()
async def search_conact(message: Message):
    print(message.model_dump_json(indent=4, exclude_none=True) )
    search_term = message.text
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —á–∞—Å—Ç–∏—á–Ω–æ–≥–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è
    db = Db()
    results = db.search_byname(search_term=search_term)
    # –°–æ–∑–¥–∞–µ–º –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º ImlineKeyboardMarkup
    kb_builder: InlineKeyboardBuilder = InlineKeyboardBuilder()
    buttons: list[InlineKeyboardButton] = []
    for i in range(len(results)):
        id = str(results[i][0])
        name = results[i][1]
        print(id, name)
        buttons.append(InlineKeyboardButton(text=f'üéì {name}', callback_data=id))
    keyb = kb_builder.add(*buttons).adjust(1).as_markup()

    if results:
        await message.answer(text='üîé   –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞: ', reply_markup=keyb)
    else:
        await message.answer(text='–ö–æ–Ω—Ç–∞–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!')


db = Db()
query = db.search_all_id()
ids = [str(row[0]) for row in query]

# –û–±—Ä–∞–±–æ—á–∏–∫ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞
@router.callback_query(F.data.in_(ids))
async def show_contact(callback: CallbackQuery):
    print(callback.model_dump_json(indent=4, exclude_none=True))
    query = db.select_phonebook_id(callback.data)
    for item in query:
        await callback.message.answer(
            text=str(f' üéì  <b>{item[0]}</b>\n\n \U0001F3DB  {item[2]}\n \U0001F454  {item[1]}\n\n üèòÔ∏è  {item[3]}\n\n ‚òéÔ∏è  +7(3952)500-008 –¥–æ–±. {item[4]}\n\n \U0001F4E8  e-mail: {item[5]}'))
    await callback.answer()